version: '3.9'

services:
  api1: &api1
    hostname: api1
    build: ./src
    depends_on: 
      - db
    environment:
      ConnectionStrings__AppDbContext: Host=db;Username=postgres;Password=postgres;Database=rinha
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "175MB"
  
  api2:
    <<: *api1
    hostname: api2
    depends_on:
      - db
      - monitor2
    volumes:
      - "./diag:/diag"
    environment:
      ConnectionStrings__AppDbContext: Host=db;Username=postgres;Password=postgres;Database=rinha
      DOTNET_DiagnosticPorts: /diag/dotnet-monitor2.sock
  monitor2:
    image: mcr.microsoft.com/dotnet/monitor:8
    environment:
      DOTNETMONITOR_Storage__DefaultSharedPath: /diag
      DOTNETMONITOR_Metrics__Endpoints: http://+:52325
      DOTNETMONITOR_Urls: http://+:52323
      DOTNETMONITOR_DiagnosticPort__ConnectionMode: listen
      DOTNETMONITOR_DiagnosticPort__EndpointName: /diag/dotnet-monitor2.sock
    command: [ "collect", "--no-auth" ]
    volumes:
      - "./diag:/diag"
    ports:
      - "52323:52323"
      - "52325:52325"

  db:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rinha
    depends_on:
      - postgres-exporter
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "200MB"
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres@db:5432/rinha?sslmode=disable"

  nginx:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on: 
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "20MB"
          
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
    healthcheck:
      test: [ "CMD", "wget", "-c", "http://localhost:9090" ]
      interval: 10s
      timeout: 15s
      retries: 10
      start_period: 40s
  grafana:
    image: grafana/grafana-oss
    ports:
      - "3000:3000"
    volumes:
      # https://grafana.com/docs/grafana/latest/administration/provisioning/
      - "./grafana/provisioning/:/etc/grafana/provisioning/"
      - "./grafana/dashboards/:/var/lib/grafana/dashboards/"
    depends_on:
      prometheus:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "grafana-cli", "plugins", "ls" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s